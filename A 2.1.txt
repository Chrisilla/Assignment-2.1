1) Write a JAVA code with the class named ‘acad’ and a method ‘main’. Hard code the program
with two integers and print the sum of those two.

import java.util.*;
class acad
{
public static void main(String[] args)
{
int num1=2;
int num2=4;
System.out.println(num1+num2);
}
}

2)Rewrite the above code, where, inputs are provided by the user at runtime and the output is
printed.

import java.util.*;
class acad
{
public static void main(String[] args)
{
Scanner sc=new Scanner(System.in);
int num1=sc.nextInt();
int num2=sc.nextInt();
System.out.println(num1+num2);
}
}

3) Write a program with a method name sum() that accepts two parameters from the user and
print the sum two numbers


import java.util.*;
class acad
{
 public static void sum()
{
Scanner sc=new Scanner(System.in);

int num1=sc.nextInt();

int num2=sc.nextInt();
System.out.println("First number is:"+num1);
System.out.println("Second number is:"+num2);
System.out.println("Sum is:"+num1+num2);

}
public static void main(String[] args)
{

sum();
}
}

4) Write a program to accepts two numbers from stdin and find all the odd as well as even
numbers present in between them.



import java.util.*;
class OddEven
{

public static void main(String[] args)
{
int[] odd_array=new int[100];
int[] even_array=new int[100];
int a=0,b=0;
Scanner sc=new Scanner(System.in);
int start=sc.nextInt();
int end=sc.nextInt();
for(int j=start;j<=end;j++)
{
if(j%2==0)
{
even_array[a]=j;
a++;
}
else
{
odd_array[b]=j;
b++;
}
}
System.out.println("Odd numbers are:");
for(int q=0;q<odd_array.length;q++)
{
    if(odd_array[q]!=0)
System.out.println(odd_array[q]);
}
System.out.println("Even numbers are:");
for(int q=0;q<even_array.length;q++)
{
     if(even_array[q]!=0)
System.out.println(even_array[q]);
}
}
}


5) Joe is scared to go to school. When her dad asked the reason, Joe said she is unable to complete
the task given by her teacher. The task was to find the “first 10 multiples” of the number entered
from stdin.

import java.util.*;
class Multiples
{

public static void main(String[] args)
{

Scanner sc=new Scanner(System.in);
int num=sc.nextInt();
for(int o=1;o<=10;o++)
{
    System.out.println(num+"*"+o+"="+(num*o));
}
}
}

6)Write a program consisting method sum() and demonstrate the concept of method
overloading using this method.

import java.util.*;
class Sum
{  
static int sum(int a,int b)
{return a+b;}  
static int sum(int a,int b,int c)
{return a+b+c;}  
}  

class Overloading
{  
public static void main(String[] args)
{  
System.out.println(Sum.sum(4,2));  
System.out.println(Sum.sum(2,5,5));  
}
}  


7) Can you overload a method with the same return type? Explain your answer with proper logic.


      Yes, we can overload  a method with the same return type. Over loading can have two or more methods 
      which has same function name but might differ with the number of parameters or differ withthe return types.
       Below is a code which explains the abouve statements.


	class Overloading
	{
	public static void main(String[] args)
	{
		int a=add(5,6);
		System.out.println(a);
		int b=add(3,5,8);
		System.out.println(b);
	}
	int add(int a,int b)
	{
	return (a+b);
	}
	int add(int a,int b,int c)
	{
	return (a+b+c);
	}
	}
        Here we find 2 functions overloaded. Both has the same function name as well as same return types.
        But it differs with the number of parameters that they accept.

8)Write a program in java using Arrays that sorts the element in descending order.


import java.util.*;
class Desc
{

public static void main(String[] args)
{

Scanner sc=new Scanner(System.in);
int n=sc.nextInt();
int arr[]=new int[50];
for(int i=0;i<n;i++)
{
arr[i]=sc.nextInt();
}
Arrays.sort(arr);
for(int j=arr.length-1;j>=0;j-- )
{
    if(arr[j]!=0)
    System.out.println(arr[j]);
}
}
}

